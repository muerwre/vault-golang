kind: pipeline
name: build

platform:
  os: linux
  arch: amd64

steps:
  - name: build-test
    image: golang:1.15
    commands:
      - apt-get update && apt-get install -y libjpeg-dev libwebp-dev -q
      - go mod download
      - make build
      - ls ./
      - rm -rf ./app.tar
      - tar -cvf ./app.tar -C ./bin vault
      - tar -rvf ./app.tar -C ./docker/vault wait-for-it.sh
      - tar -rvf ./app.tar -C ./ ./templates
      - ls ./
  - name: deploy-dev
    image: golang:1.15
    when:
      branch: develop
      event:
        - push
    environment:
      env_location:
        from_secret: VAULT_STAGING_BACKEND_ENV
    commands:
      - echo "HI"
      - echo $env_location
      - ls ./
  - name: rsync
    image: drillster/drone-rsync
    environment:
      RSYNC_KEY:
        from_secret: rsync_key
      RSYNC_USER:
        from_secret: rsync_user
      RSYNC_HOST:
        from_secret: rsync_host
    settings:
      hosts: [${RSYNC_HOST}]
      source: ./
      target: /tmp/
      include:
        - "app.tar"
      exclude:
        - "**.*"
      prescript:
        - ls ./
        - tar -xf app.tar.gz -C /tmp/app
      script:
        - ls ./
        - tar -xf app.tar.gz -C /tmp/app2

